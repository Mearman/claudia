name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run tests every day at 2 AM UTC
    - cron: '0 2 * * *'

env:
  CARGO_TERM_COLOR: always

jobs:
  test-matrix:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, macos-latest, windows-latest]
        rust: [stable, beta]
        exclude:
          # Skip beta on Windows and macOS for faster CI
          - os: windows-latest
            rust: beta
          - os: macos-latest
            rust: beta

    runs-on: ${{ matrix.os }}
    name: Test on ${{ matrix.os }} with Rust ${{ matrix.rust }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (Ubuntu only)
        if: matrix.os == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            build-essential \
            libssl-dev \
            libxdo-dev \
            libsoup-3.0-dev \
            libjavascriptcoregtk-4.1-dev

      - name: Setup Rust ${{ matrix.rust }}
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'
          key: ${{ matrix.os }}-${{ matrix.rust }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install frontend dependencies
        run: bun install

      - name: Run frontend type checking
        run: bunx tsc --noEmit

      - name: Run Rust tests
        working-directory: src-tauri
        run: cargo test --verbose --all-features

      - name: Run sandbox tests (Linux only)
        if: matrix.os == 'ubuntu-22.04'
        working-directory: src-tauri
        run: cargo test --test sandbox_tests --verbose

      - name: Test build process
        working-directory: src-tauri
        run: cargo build --release

  lint:
    runs-on: ubuntu-22.04
    name: Lint and Format Check

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            build-essential \
            libssl-dev \
            libsoup-3.0-dev \
            libjavascriptcoregtk-4.1-dev

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install frontend dependencies
        run: bun install

      - name: Check TypeScript formatting and linting
        run: |
          bunx tsc --noEmit
          # Add ESLint/Prettier if configured

      - name: Check Rust formatting
        working-directory: src-tauri
        run: cargo fmt --check

      - name: Run Clippy
        working-directory: src-tauri
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Check for unused dependencies
        working-directory: src-tauri
        run: |
          cargo install cargo-machete || echo "Failed to install cargo-machete, skipping"
          cargo machete || echo "cargo-machete not available, skipping unused dependency check"

  coverage:
    runs-on: ubuntu-22.04
    name: Code Coverage

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            build-essential \
            libssl-dev \
            libsoup-3.0-dev \
            libjavascriptcoregtk-4.1-dev

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-tarpaulin
        run: cargo install cargo-tarpaulin

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Generate code coverage
        working-directory: src-tauri
        run: cargo tarpaulin --verbose --all-features --workspace --timeout 120 --out xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: src-tauri/cobertura.xml
          flags: rust
          name: rust-coverage
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  benchmark:
    runs-on: ubuntu-22.04
    name: Performance Benchmarks

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            build-essential \
            libssl-dev \
            libsoup-3.0-dev \
            libjavascriptcoregtk-4.1-dev

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Run benchmarks
        working-directory: src-tauri
        run: |
          # Only run if benchmark tests exist
          if ls benches/*.rs 1> /dev/null 2>&1; then
            cargo bench
          else
            echo "No benchmark tests found, skipping..."
          fi